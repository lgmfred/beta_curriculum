# Home Page

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.8.0", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Home Page

You're going to build the home page of an HTML portfolio site similar to the following.

<!-- livebook:{"break_markdown":true} -->

![](images/portfolio_home_page_exercise.png)

<!-- livebook:{"break_markdown":true} -->

Create a `home.html` file in your projects folder.

Try to match the document above as best you can, however you may exercise your creativity and do not have to follow the example so long as you have:

* navigation with a link to your github. Ideally use a `<nav>` tag for navigation.
* a heading saying your name.
* a paragraph with bold and italic text that describes who you are and what you do.
* An image (it can be any image if you would prefer to not use a personal photo)
* an ordered or unordered list with 3+ list items.

## (Bonus) Skills Table

Include a table of your skills with an associated score. For example:

<!-- livebook:{"break_markdown":true} -->

![](images/skills%20table.png)

<!-- livebook:{"break_markdown":true} -->

### (Bonus) Icons

<!-- livebook:{"break_markdown":true} -->

Include icons in your project.

For example, you can include [Lineicons](https://lineicons.com/docs/) by placing the following inside of the `<head>` section in `home.html`.

```html
<link href="https://cdn.lineicons.com/3.0/lineicons.css" rel="stylesheet">
```

Then you could the use the `<i>` tag and [Lineicons icons](https://lineicons.com/icons/) to create a GitHub icon instead of text.

```html
<i class="lni lni-github-original"></i>
```

## Mark As Completed

<!-- livebook:{"attrs":{"source":"file_name = Path.basename(Regex.replace(~r/#.+/, __ENV__.file, \"\"), \".livemd\")\n\nprogress_path = __DIR__ <> \"/../progress.json\"\nexisting_progress = File.read!(progress_path) |> Jason.decode!()\n\ndefault = Map.get(existing_progress, file_name, false)\n\nform =\n  Kino.Control.form(\n    [\n      completed: input = Kino.Input.checkbox(\"Mark As Completed\", default: default)\n    ],\n    report_changes: true\n  )\n\nTask.async(fn ->\n  for %{data: %{completed: completed}} <- Kino.Control.stream(form) do\n    File.write!(progress_path, Jason.encode!(Map.put(existing_progress, file_name, completed)))\n  end\nend)\n\nform","title":"Track Your Progress"},"chunks":null,"kind":"Elixir.HiddenCell","livebook_object":"smart_cell"} -->

```elixir
file_name = Path.basename(Regex.replace(~r/#.+/, __ENV__.file, ""), ".livemd")

progress_path = __DIR__ <> "/../progress.json"
existing_progress = File.read!(progress_path) |> Jason.decode!()

default = Map.get(existing_progress, file_name, false)

form =
  Kino.Control.form(
    [
      completed: input = Kino.Input.checkbox("Mark As Completed", default: default)
    ],
    report_changes: true
  )

Task.async(fn ->
  for %{data: %{completed: completed}} <- Kino.Control.stream(form) do
    File.write!(progress_path, Jason.encode!(Map.put(existing_progress, file_name, completed)))
  end
end)

form
```

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout solutions
$ git checkout -b home-page-exercise
$ git add .
$ git commit -m "finish home page exercise"
$ git push origin home-page-exercise
```

Create a pull request from your `home-page-exercise` branch to your `solutions` branch.
Please do not create a pull request to the DockYard Academy repository as this will spam our PR tracker.

**DockYard Academy Students Only:**

Notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.
You (or your teacher) may merge your PR into your solutions branch after review.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.

## Up Next

| Previous                                                   | Next                           |
| ---------------------------------------------------------- | -----------------------------: |
| [Common Components](../exercises/common_components.livemd) | [APIs](../reading/apis.livemd) |
