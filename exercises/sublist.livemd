# Sublist

```elixir
Mix.install([
  {:kino, "~> 0.7.0", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Sublist

We are given a list of numbers and we need to return all consecutive sublists
of a given size.

<!-- livebook:{"force_markdown":true} -->

```elixir
iex(1)> list = [1, 1, 2, 3, 1, 4, 2]
[1, 1, 2, 3, 1, 4, 2]
iex(2)> Sublist.sublists(list, 3)
[[1, 1, 2], [1, 2, 3], [2, 3, 1], [3, 1, 4], [1, 4, 2]]
```

## Implementation

```elixir
defmodule Sublist do
  @doc ~S"""
  Returns all consecutive sublists of `list` of the given `size`.

  ## Examples

      iex> Sublist.sublists([1, 1, 2, 3, 1, 4, 2], 3)
      [[1, 1, 2], [1, 2, 3], [2, 3, 1], [3, 1, 4], [1, 4, 2]]

  """
  def sublists(list, size) do
  end
end
```

[Return Home](../start.livemd)<span style="padding: 0 30px"></span>
[Report An Issue](https://github.com/DockYard-Academy/beta_curriculum/issues/new?assignees=&labels=&template=issue.md&title=)

## Commit Your Progress

Run the following in your command line from the curriculum folder to track and save your progress in a Git commit.
Ensure that you do not already have undesired or unrelated changes by running `git status` or by checking the source control tab in Visual Studio Code.

```
$ git checkout main
$ git checkout -b exercise-sublist
$ git add .
$ git commit -m "finish sublist exercise"
$ git push origin exercise-sublist
```

Create a pull request to your forked `main` branch. Please do not create a pull request to the DockYard Academy repository as this will spam our PR tracker.

**DockYard Academy Students Only:**

Notify your teacher by including `@BrooklinJazz` in your PR description to get feedback.

If you are interested in joining the next academy cohort, [sign up here](https://academy.dockyard.com/) to receive more news when it is available.
